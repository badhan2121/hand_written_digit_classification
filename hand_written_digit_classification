# -*- coding: utf-8 -*-
"""handWrittenDigitClassification.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_2x0XisAE2GPjraBn-J-uO_VKEJM_riD
"""

import pandas as pd
import tensorflow as tf
from tensorflow import keras
import matplotlib.pyplot as plt
import numpy as np
#%matplotlib inline

(X_train,y_train),(X_test,y_test)=keras.datasets.mnist.load_data()
len(X_train)

X_train = X_train / 255
X_test = X_test / 255

X_train[0]

plt.matshow(X_train[0])

#y_test[3]

#X_train[1]

plt.matshow(X_train[1])

X_train_flatten=X_train.reshape(len(X_train),28*28)
X_test_flatten=X_test.reshape(len(X_test),28*28)

X_train_flatten

X_train_flatten[0]

from keras.optimizers.optimizer_v1 import Optimizer
model=keras.Sequential([
    keras.layers.Dense(10,activation='sigmoid')
    
])
model.compile(
    optimizer='adam',
    loss='sparse_categorical_crossentropy',
    metrics=['accuracy']

)
model.fit(X_train_flatten,y_train,epochs=5)

model.evaluate(X_test_flatten,y_test)

plt.matshow(X_test[0])

y_predicted=model.predict(X_test_flatten)
y_predicted[0]

np.argmax(y_predicted[0])
